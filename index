<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Corrected Client Pipeline Map with Central African Republic</title>
    <script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
    <script src="https://cdn.jsdelivr.net/npm/d3-geo-projection@4"></script>
    <script src="https://cdn.jsdelivr.net/npm/topojson@3"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f4f8;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1, h2 {
            color: #2c3e50;
        }
        #map {
            width: 100%;
            height: 600px;
        }
        .country {
            stroke: #ffffff;
            stroke-width: 0.5px;
        }
        .country:hover {
            opacity: 0.8;
        }
        .country.active {
            stroke-width: 2px;
            stroke: #2c3e50;
        }
        .country.hub {
            fill: #e74c3c;
        }
        #info-panel {
            margin-top: 20px;
            padding: 15px;
            background-color: #ecf0f1;
            border-radius: 5px;
        }
        .project {
            margin-bottom: 10px;
            padding: 10px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .project h3 {
            margin-top: 0;
            color: #2980b9;
        }
        .arrow {
            stroke: #e74c3c;
            stroke-width: 2px;
            fill: none;
            marker-end: url(#arrowhead);
        }
        .qatar-point {
            fill: #e74c3c;
            stroke: #ffffff;
            stroke-width: 2px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Corrected Client Pipeline Map with Central African Republic</h1>
        <div id="map"></div>
        <div id="info-panel">
            <h2>Select a country to see details</h2>
        </div>
    </div>

    <script>
    const width = 1000;
    const height = 600;

    const svg = d3.select("#map")
        .append("svg")
        .attr("viewBox", `0 0 ${width} ${height}`)
        .attr("preserveAspectRatio", "xMidYMid meet");

    const projection = d3.geoEqualEarth()
        .scale(300)
        .center([45, 25])
        .translate([width / 2, height / 2]);

    const path = d3.geoPath().projection(projection);

    svg.append("defs").append("marker")
        .attr("id", "arrowhead")
        .attr("viewBox", "-0 -5 10 10")
        .attr("refX", 5)
        .attr("refY", 0)
        .attr("orient", "auto")
        .attr("markerWidth", 6)
        .attr("markerHeight", 6)
        .attr("xoverflow", "visible")
        .append("svg:path")
        .attr("d", "M 0,-5 L 10 ,0 L 0,5")
        .attr("fill", "#e74c3c")
        .style("stroke", "none");

    const projectData = {
        "Qatar": [
            { name: "Rasmal Ventures", description: "Creation of an investment fund" }
        ],
        "Saudi Arabia": [
            { name: "Neom", description: "Pilot project under development" },
            { name: "Real Human", description: "Project with Rana Abud Nemeh" }
        ],
        "Egypt": [
            { name: "Egyptian Government", description: "Management of real estate assets in the country" },
            { name: "Real Estate Company", description: "Real Estate management" }
        ],
        "Thailand": [
            { name: "BDMS", description: "Medical sector company, awaiting feedback" }
        ],
        "Oman": [
            { name: "Accelerator", description: "Incubation in an accelerator" }
        ],
        "Malaysia": [
            { name: "Water Management Company", description: "Water management project" }
        ],
        "France": [
            { name: "Mehdi Benlahoucine", description: "Co-founder, Ambassade Selfbar France" }
        ],
        "Russia": [
            { name: "Mikhail Radzhabov", description: "Gazprom Neft project management" }
        ],
        "United Arab Emirates": [
            { name: "OGV", description: "Creation of a venture studio" }
        ],
        "Tunisia": [
            { name: "Renewable Energy Project", description: "Development of renewable energy infrastructure" }
        ],
        "Central African Republic": [
            { name: "National ITMO Registry", description: "Signed project for national ITMO registry implementation" }
        ]
    };

    const countryColors = {
        "Qatar": "#e74c3c",
        "Saudi Arabia": "#3498db",
        "Egypt": "#2ecc71",
        "Thailand": "#f1c40f",
        "Oman": "#9b59b6",
        "Malaysia": "#1abc9c",
        "France": "#34495e",
        "Russia": "#e67e22",
        "United Arab Emirates": "#16a085",
        "Tunisia": "#d35400",
        "Central African Republic": "#8e44ad"
    };

    d3.json("https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json").then(function(world) {
        const countries = topojson.feature(world, world.objects.countries);

        svg.selectAll("path")
            .data(countries.features)
            .enter().append("path")
            .attr("d", path)
            .attr("class", "country")
            .attr("fill", function(d) {
                if (d.properties.name === "Central African Rep.") {
                    return countryColors["Central African Republic"];
                }
                return countryColors[d.properties.name] || "#d0d0d0";
            })
            .on("click", function(event, d) {
                let countryName = d.properties.name;
                if (countryName === "Central African Rep.") {
                    countryName = "Central African Republic";
                }
                updateInfoPanel(countryName);
                d3.selectAll(".country").classed("active", false);
                d3.select(this).classed("active", true);
                drawArrowToQatar(countryName);
            });

        // Add a larger point for Qatar
        const qatarCoordinates = projection([51.1839, 25.3548]); // Coordinates for Qatar
        svg.append("circle")
            .attr("cx", qatarCoordinates[0])
            .attr("cy", qatarCoordinates[1])
            .attr("r", 8)
            .attr("class", "qatar-point")
            .on("click", function() {
                updateInfoPanel("Qatar");
                d3.selectAll(".country").classed("active", false);
                d3.selectAll(".arrow").remove();
            });

        function updateInfoPanel(countryName) {
            const infoPanel = d3.select("#info-panel");
            infoPanel.html("");
            
            if (projectData[countryName]) {
                infoPanel.append("h2").text(countryName);
                projectData[countryName].forEach(project => {
                    const projectDiv = infoPanel.append("div").attr("class", "project");
                    projectDiv.append("h3").text(project.name);
                    projectDiv.append("p").text(project.description);
                });
            } else if (countryName === "Qatar") {
                infoPanel.html("<h2>Qatar - Our Development Hub</h2><p>Qatar is our central base for developing our activities in the region. It's from here that we coordinate our projects and develop our client network.</p>");
                projectData["Qatar"].forEach(project => {
                    const projectDiv = infoPanel.append("div").attr("class", "project");
                    projectDiv.append("h3").text(project.name);
                    projectDiv.append("p").text(project.description);
                });
            } else {
                infoPanel.html("<h2>No ongoing projects in this country</h2>");
            }
        }

        function drawArrowToQatar(countryName) {
            svg.selectAll(".arrow").remove();
            if (countryName !== "Qatar" && projectData[countryName]) {
                const countryCenter = projection(d3.geoCentroid(countries.features.find(d => d.properties.name === (countryName === "Central African Republic" ? "Central African Rep." : countryName))));
                
                svg.append("path")
                    .attr("class", "arrow")
                    .attr("d", `M${countryCenter[0]},${countryCenter[1]}L${qatarCoordinates[0]},${qatarCoordinates[1]}`)
                    .attr("marker-end", "url(#arrowhead)");
            }
        }
    });
    </script>
</body>
</html>
